-- ZADANIE 1

SELECT LAST_NAME, SALARY AS WYNAGRODZENIE
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 50 AND SALARY >= 2000 AND SALARY <= 7000
ORDER BY LAST_NAME;


-- ZADANIE 2

SELECT HIRE_DATE, LAST_NAME, EMAIL, :user_input
FROM EMPLOYEES
WHERE MANAGER_ID iS NOT NULL AND TO_CHAR(HIRE_DATE, 'YYYY') = 2005
ORDER BY HIRE_DATE;

-- ZADANIE 3

SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME, SALARY, PHONE_NUMBER
FROM EMPLOYEES
WHERE SUBSTR(LAST_NAME, 3, 1) = 'e' AND FIRST_NAME LIKE '%' || :user_input || '%'
ORDER BY FULL_NAME DESC, PHONE_NUMBER;


-- ZADANIE 4

SELECT FIRST_NAME, LAST_NAME, ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) AS MONTHS,
CASE
    WHEN ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) <= 150 THEN SALARY * 0.1
    WHEN ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) <= 200 THEN SALARY * 0.2
    ELSE SALARY * 0.3
END AS NEW_SALARY
FROM EMPLOYEES
ORDER BY MONTHS DESC;


-- ZADANIE 5

SELECT DEPARTMENT_NAME, SUM(SALARY) AS SUM_SALARY, ROUND(AVG(SALARY)) AS AVG_SALARY
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
WHERE (SELECT MIN(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID) > 5000
GROUP BY DEPARTMENT_NAME;


-- ZADANIE 6

SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, JOB_ID
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
INNER JOIN LOCATIONS ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
WHERE CITY = 'Toronto';


-- ZADANIE 7

SELECT JENNIFER.FIRST_NAME, JENNIFER.LAST_NAME, JENNIFER_COWORKERS.FIRST_NAME, JENNIFER_COWORKERS.LAST_NAME
FROM EMPLOYEES JENNIFER
INNER JOIN EMPLOYEES JENNIFER_COWORKERS ON JENNIFER.DEPARTMENT_ID = JENNIFER_COWORKERS.DEPARTMENT_ID
WHERE JENNIFER.FIRST_NAME = 'Jennifer' AND JENNIFER_COWORKERS.EMPLOYEE_ID != JENNIFER.EMPLOYEE_ID;


-- ZADANIE 8

SELECT DEPARTMENT_NAME
FROM DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
WHERE EMPLOYEES.EMPLOYEE_ID IS NULL


-- ZADANIE 9 - Kopiowanie tej tabeli jest ju≈º w pliku copy_queries.sql

-- CREATE TABLE job_grades AS SELECT * FROM hr.job_grades;
-- ALTER TABLE job_grades ADD PRIMARY KEY(grade);


-- ZADANIE 10


SELECT FIRST_NAME, LAST_NAME, JOB_ID, SALARY, DEPARTMENT_NAME, (
    SELECT GRADE
    FROM JOB_GRADES
    WHERE SALARY BETWEEN JOB_GRADES.MIN_SALARY AND JOB_GRADES.MAX_SALARY
) AS GRADE
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;


-- ZADANIE 11

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE (SELECT AVG(SALARY) FROM EMPLOYEES) < SALARY
ORDER BY SALARY DESC;


-- ZADANIE 12

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (
    SELECT DISTINCT  DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE LAST_NAME LIKE '%u%'
);